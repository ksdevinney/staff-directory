{"version":3,"sources":["components/Header.js","components/StaffCard.js","components/StaffInfo.js","components/Search.js","components/Wrapper.js","App.js","reportWebVitals.js","index.js"],"names":["Header","StaffCard","name","city","email","phone","StaffInfo","props","className","data-column","data-order","onClick","event","console","log","target","id","employeeData","map","employee","key","Search","onChange","handleSearch","placeholder","value","searchString","Wrapper","state","employeeSearch","employeeDatabase","order","orderName","componentDidMount","axios","get","then","apiData","apiResults","data","results","i","length","push","first","last","location","setState","preventDefault","userSearch","searchRecord","toLocaleLowerCase","indexOf","handleSort","sort","a","b","nameA","toLowerCase","nameB","asc","this","employeesToSort","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1bc799d.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n    return (\n        <header>\n            <h1>Employee Directory</h1>\n            <h5>Search for employees by name or click a column to sort alphabetically.</h5>\n        </header>\n    )\n}\nexport default Header","import React from 'react';\n\nfunction StaffCard({ name, city, email, phone }) {\n    // data for each employee\n    return (\n        <tr>\n            <td>{name} </td>\n            <td>{city} </td>\n            <td>{email}</td>\n            <td>{phone}</td>\n        </tr>\n    )\n}\n\nexport default StaffCard","import React from 'react';\nimport StaffCard from './StaffCard'\n\nfunction StaffInfo(props) {\n    return (\n        <div className='container'>\n            {/* basic table */}\n            <table className=\"table table-hover table-striped table-bordered border-danger\">\n                <thead>\n                <tr className=\"info\">\n                    <th data-column=\"name\" data-order=\"asc\"\n                        onClick={ (event) => {\n                            console.log(event.target);\n                        }}\n                        >Name ðŸ”»</th>\n                    <th data-column=\"city\">City</th>\n                    <th data-column=\"email\">Email</th>\n                    <th data-column=\"phone\">Phone</th>\n                </tr>\n                </thead>\n                <tbody id=\"myTable\">\n                {props.employeeData.map((employee, key) => \n                <StaffCard name={employee.name} city={employee.city} email={employee.email} phone={employee.phone} key={key} /> )} \n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default StaffInfo","import React from 'react'\n\nfunction Search (props) {\n    return(\n        <div>\n            <input onChange={(event) => props.handleSearch(event)} placeholder='Search' value={props.searchString} />\n        </div>\n    )\n}\n\nexport default Search","import React from 'react';\nimport StaffInfo from './StaffInfo';\nimport axios from 'axios';\nimport Search from './Search';\n// import SortButton from './SortButton';\n\nclass Wrapper extends React.Component{\n    state = {\n        employeeData: [],\n        employeeSearch: '',\n        employeeDatabase: [],\n        order: 'asc',\n        orderName: 'ascending'\n    }\n    // call random people from API\n    componentDidMount= () => {\n        axios.get('https://randomuser.me/api/?results=20')\n        .then(apiData => {\n            console.log(apiData)\n            let apiResults = apiData.data.results\n            let employeeData = []\n            for (let i=0; i<apiResults.length; i++) {\n                // push to array in state\n                employeeData.push({ \n                    name:apiResults[i].name.first + ' ' + apiResults[i].name.last,\n                    city:apiResults[i].location.city,\n                    email:apiResults[i].email,\n                    phone:apiResults[i].phone\n                })\n            }\n            this.setState({employeeData:employeeData, employeeDatabase:employeeData})\n        })\n    }\n    // search by name\n    handleSearch = (event) => {\n        event.preventDefault()\n        let userSearch = event.target.value\n        if (userSearch === '' ) {\n            this.setState ({employeeData:this.state.employeeDatabase})\n        } else {\n        let employeeData = this.state.employeeData\n        let searchRecord = []\n        for (let i=0; i<employeeData.length; i++) {\n            // make search non-case sensitive\n            if ((employeeData[i].name.toLocaleLowerCase().indexOf(userSearch.toLocaleLowerCase()) > -1 )) {\n                searchRecord.push(employeeData[i])\n            }\n        } \n        console.log(searchRecord)\n        this.setState({employeeSearch:userSearch, employeeData:searchRecord})\n        }\n    }\n    // sort goes here \n    handleSort = (event) => {\n        event.onClick()\n        // logic for sorting\n        const employeesToSort = this.state.employeeData.sort(function(a, b) {\n            let nameA = a.name.toLowerCase();\n            let nameB = b.name.toLowerCase();\n            if (nameA < nameB) {\n                return -1;\n            } else if (nameA < nameB) {\n                return 1;\n            } else {\n                return 0;\n            }\n        })\n        this.setState({employeeData:this.asc})\n        // here's a change\n    }\n\n    // holds things\n    render(){\n    return(\n        <div className='StaffList'>\n            <Search searchString={this.state.userSearch} handleSearch={this.handleSearch} />\n            <StaffInfo employeeData={this.state.employeeData} employeesToSort={this.handleSort} />\n        </div>\n    )\n    }\n}\n\nexport default Wrapper","import Header from './components/Header';\nimport Wrapper from './components/Wrapper';\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Header />\n      <Wrapper />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}